#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1           0 973 0 26 3 12 #"#lang racket"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 12 #"gigls/unsafe"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";;;Prologue 2:12 - 2:14"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";;;Problem1 2:15 - 2:30"
0 0 4 29 1 #"\n"
0 0 17 3 24 #";           4:20 - 4:41 "
0 0 4 29 1 #"\n"
0 0 17 3 23 #";;;Problem2 4:41 - 5:15"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";           7:10 - 9:55"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";;;Problem3 4:00 - 4:20"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";           6:05 - 6:15"
0 0 4 29 1 #"\n"
0 0 17 3 24 #";          10:11 - 10:30"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";;;Problem4 5:35 - 5:45"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";;;Problem5 5:45 - 6:05"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";           7:00 - 7:10"
0 0 4 29 1 #"\n"
0 0 17 3 24 #";           9:55 - 10:11"
0 0 4 29 1 #"\n"
0 0 17 3 66
#";_________________________________________________________________"
0 0 4 29 1 #"\n"
0 0 17 3 12 #";;;Problem 1"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 8 #"safe-sum"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 20 3 1 #"0"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 8 #"integer?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 8 #"safe-sum"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 4 #")))]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"safe-sum"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7         469 4           0 0           0 77 0 14 3 9 #"Examples:"
0 0 2 29 1 #"\n"
0 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"safe-sum"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 20 3 1 #"5"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"8"
0 0 2 29 1 #"\n"
0 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"safe-sum"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"6"
0 0 2 29 1 #"\n"
0 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"safe-sum"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 2 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"8"
0 0 2 29 1 #"\n"
0 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"safe-sum"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"0"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 66
#";_________________________________________________________________"
0 0 4 29 1 #"\n"
0 0 17 3 11 #";;;Problem2"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 4 #";a. "
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"closest-to-zero"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 17 3 40 #";; finding the null before the list ends"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 3 7 #"       "
0 0 17 3 39 #";; giving the value so it doesn't crash"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"negative?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"abs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"abs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 15 #"closest-to-zero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 15 #"closest-to-zero"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7         409 4           0 0           0 67 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"closest-to-zero"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 2 #"43"
0 0 2 3 1 #" "
0 0 20 3 4 #"-245"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 20 3 2 #"32"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"2"
0 0 2 29 1 #"\n"
0 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"closest-to-zero"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 2 #"43"
0 0 2 3 1 #" "
0 0 20 3 4 #"-245"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 2 #"-1"
0 0 2 29 1 #"\n"
0 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"closest-to-zero"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 2 #"-1"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"1"
0 0 2 29 1 #"\n"
0 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"closest-to-zero"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 2 #"-1"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";b."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 23 #" closest-to-zero-helper"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"  "
0 0 17 3 1 #"("
0 0 17 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 1 #" "
0 0 17 3 4 #"lst)"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"    "
0 0 17 3 1 #"("
0 0 17 3 2 #"if"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 5 #"null?"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 5 #"lst))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 8 #"        "
0 0 17 3 1 #"("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 4 #"lst)"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 8 #"        "
0 0 17 3 1 #"("
0 0 17 3 2 #"if"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 9 #"negative?"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"abs"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 3 #"lst"
0 0 17 3 2 #"))"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"abs"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 8 #"lst)))))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"            "
0 0 17 3 1 #"("
0 0 17 3 22 #"closest-to-zero-helper"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 4 #"cons"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 3 #"lst"
0 0 17 3 1 #")"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 6 #"lst)))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 12 #"            "
0 0 17 3 1 #"("
0 0 17 3 22 #"closest-to-zero-helper"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 3 #"lst"
0 0 17 3 1 #")"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 10 #"lst)))))))"
0 0 4 29 1 #"\n"
0 0 17 3 8 #";       "
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 17 #" closest-to-zero2"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"  "
0 0 17 3 1 #"("
0 0 17 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 4 #"lst)"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"     "
0 0 17 3 1 #"("
0 0 17 3 22 #"closest-to-zero-helper"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 3 #"lst"
0 0 17 3 1 #")"
0 0 17 3 1 #" "
0 0 17 3 6 #"lst)))"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 5 #" proc"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 17 3 1 #"("
0 0 17 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 4 #"lst)"
0 0 4 29 1 #"\n"
0 0 17 3 5 #";    "
0 0 17 3 1 #"("
0 0 17 3 11 #"proc-helper"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"car"
0 0 17 3 1 #" "
0 0 17 3 3 #"lst"
0 0 17 3 1 #")"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 3 #"cdr"
0 0 17 3 1 #" "
0 0 17 3 7 #"lst))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 22 #"closest-to-zero-helper"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"so-far"
0 0 4 3 1 #" "
0 0 14 3 13 #"lst-remaining"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 13 #"lst-remaining"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 6 #"so-far"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 22 #"closest-to-zero-helper"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"negative?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"abs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 13 #"lst-remaining"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"abs"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 13 #"lst-remaining"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 22 #"closest-to-zero-helper"
0 0 4 3 1 #" "
0 0 14 3 6 #"so-far"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 13 #"lst-remaining"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 13 #"lst-remaining"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 22 #"closest-to-zero-helper"
0 0 4 3 1 #" "
0 0 14 3 6 #"so-far"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 13 #"lst-remaining"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 13 #"lst-remaining"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";c."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 66
#";_________________________________________________________________"
0 0 4 29 1 #"\n"
0 0 17 3 11 #";;;Problem3"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"rgb-average"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rgb1"
0 0 4 3 1 #" "
0 0 14 3 4 #"rgb2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"rgb-new"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"rgb-red"
0 0 4 3 1 #" "
0 0 14 3 4 #"rgb1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"rgb-red"
0 0 4 3 1 #" "
0 0 14 3 4 #"rgb2"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"rgb-green"
0 0 4 3 1 #" "
0 0 14 3 4 #"rgb1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"rgb-green"
0 0 4 3 1 #" "
0 0 14 3 4 #"rgb2"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 8 #"quotient"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"rgb-blue"
0 0 4 3 1 #" "
0 0 14 3 4 #"rgb1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"rgb-blue"
0 0 4 3 1 #" "
0 0 14 3 4 #"rgb2"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"rgb-averages"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"colors"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 6 #"colors"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 14 3 4 #"null"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 4 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 17 #"rgb-brightness   "
0 0 17 3 17 #";used from lab 24"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";  "
0 0 17 3 1 #"("
0 0 17 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 6 #"color)"
0 0 4 29 1 #"\n"
0 0 17 3 5 #";    "
0 0 17 3 1 #"("
0 0 17 3 5 #"round"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 3 #"100"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 1 #"/"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 4 #"0.30"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 7 #"rgb-red"
0 0 17 3 1 #" "
0 0 17 3 7 #"color))"
0 0 4 29 1 #"\n"
0 0 17 3 25 #";                        "
0 0 17 3 1 #"("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 4 #"0.59"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 9 #"rgb-green"
0 0 17 3 1 #" "
0 0 17 3 7 #"color))"
0 0 4 29 1 #"\n"
0 0 17 3 25 #";                        "
0 0 17 3 1 #"("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 4 #"0.11"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 8 #"rgb-blue"
0 0 17 3 1 #" "
0 0 17 3 8 #"color)))"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";                      "
0 0 17 3 8 #"255)))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 20 #";(define neighbors? "
0 0 4 29 1 #"\n"
0 0 17 3 5 #";    "
0 0 17 3 15 #"(lambda (color)"
0 0 4 29 1 #"\n"
0 0 17 3 6 #";     "
0 0 17 3 1 #"("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 2 #"64"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 26 #"rgb-brightness color))))  "
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 66
#";_________________________________________________________________"
0 0 4 29 1 #"\n"
0 0 17 3 11 #";;;Problem4"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 4 #";a. "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";;; Procedure:"
0 0 4 29 1 #"\n"
0 0 17 3 13 #";;;   Reverse"
0 0 4 29 1 #"\n"
0 0 17 3 15 #";;; Parameters:"
0 0 4 29 1 #"\n"
0 0 17 3 44 #";;;   List, the input must be only one list "
0 0 4 29 1 #"\n"
0 0 17 3 12 #";;; Purpose:"
0 0 4 29 1 #"\n"
0 0 17 3 49 #";;;   To make a list with values in the opposite "
0 0 4 29 1 #"\n"
0 0 17 3 11 #";;;   order"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 4 #"the "
0 0 17 3 24 #"ones in the inputed list"
0 0 4 29 1 #"\n"
0 0 17 3 13 #";;; Produces:"
0 0 4 29 1 #"\n"
0 0 17 3 28 #";;;;  List, an inverted list"
0 0 4 29 1 #"\n"
0 0 17 3 18 #";;; Preconditions:"
0 0 4 29 1 #"\n"
0 0 17 3 9 #";;;  none"
0 0 4 29 1 #"\n"
0 0 17 3 19 #";;; Postconditions:"
0 0 4 29 1 #"\n"
0 0 17 3 51 #";;;   Reversed list has same values as inputed list"
0 0 4 29 1 #"\n"
0 0 4 3 37 #"                                     "
0 0 4 29 1 #"\n"
0 0 4 3 34 #"                                  "
0 0 4 29 1 #"\n"
0 0 17 3 4 #";b. "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 14 3 10 #"my-reverse"
0 0 4 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 17 #"my-reverse-helper"
0 0 17 3 1 #" "
0 0 14 3 4 #"null"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 17 #"my-reverse-helper"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"so-far"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 14 3 6 #"so-far"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 17 #"my-reverse-helper"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"so-far"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 4 3 1 #" "
0 0 4 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 5 #")))))"
0 0 4 3 9 #"         "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7         577 4           0 0           0 95 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"my-reverse"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 2 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 20 3 1 #"4"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"my-reverse"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 20 3 1 #"8"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 20 3 1 #"8"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"my-reverse"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 2 #"45"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 20 3 2 #"45"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 66
#";_________________________________________________________________"
0 0 4 29 1 #"\n"
0 0 17 3 11 #";;;Problem5"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"riffle"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"list1"
0 0 4 3 1 #" "
0 0 14 3 5 #"list2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 13 #"riffle-helper"
0 0 4 3 1 #" "
0 0 14 3 4 #"null"
0 0 4 3 1 #" "
0 0 14 3 5 #"list1"
0 0 4 3 1 #" "
0 0 14 3 5 #"list2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"riffle-helper"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"list-so-far"
0 0 4 3 1 #" "
0 0 14 3 15 #"remaining-list1"
0 0 4 3 1 #" "
0 0 14 3 15 #"remaining-list2"
0 0 4 3 1 #" "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 15 #"remaining-list1"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 14 3 11 #"list-so-far"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 13 #"riffle-helper"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 14 3 11 #"list-so-far"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 17 3 1 #" "
0 0 14 3 15 #"remaining-list1"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 17 3 1 #" "
0 0 14 3 15 #"remaining-list2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 15 #"remaining-list1"
0 0 22 3 2 #")("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 15 #"remaining-list2"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 17 3 87
(
 #";I could not figure out a way to get it to add the rest of the lists"
 #" when one finished."
) 0 0 4 29 1 #"\n"
0 0 17 3 3 #";It"
0 0 17 3 1 #" "
0 0 17 3 6 #"triend"
0 0 17 3 1 #" "
0 0 17 3 4 #"cond"
0 0 17 3 1 #" "
0 0 17 3 8 #"commands"
0 0 17 3 1 #" "
0 0 17 3 6 #"couldn"
0 0 17 3 1 #"'"
0 0 17 3 1 #"t"
0 0 17 3 1 #" "
0 0 17 3 3 #"get"
0 0 17 3 1 #" "
0 0 17 3 2 #"it"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 6 #" work."
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7         751 4           0 0           0 124 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"riffle"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"x"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"y"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"z"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 1 #"x"
0 0 2 3 1 #" "
0 0 14 3 1 #"b"
0 0 2 3 1 #" "
0 0 14 3 1 #"y"
0 0 2 3 1 #" "
0 0 14 3 1 #"c"
0 0 2 3 1 #" "
0 0 14 3 1 #"z"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"riffle"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"b"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"iota"
0 0 2 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 20 3 1 #"0"
0 0 2 3 1 #" "
0 0 14 3 1 #"b"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 1 #"c"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 14 3 1 #">"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"riffle"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 20 3 3 #"124"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 20 3 1 #"5"
0 0 2 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 20 3 1 #"5"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 2 3 1 #" "
0 0 20 3 3 #"124"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0           0
